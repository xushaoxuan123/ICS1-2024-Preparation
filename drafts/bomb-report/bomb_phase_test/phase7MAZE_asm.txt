
phase7MAZE:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 7a 2f 00 00    	pushq  0x2f7a(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 7b 2f 00 00 	bnd jmpq *0x2f7b(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 6d 2f 00 00 	bnd jmpq *0x2f6d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001090 <puts@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 3fb0 <puts@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <__stack_chk_fail@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 0d 2f 00 00 	bnd jmpq *0x2f0d(%rip)        # 3fb8 <__stack_chk_fail@GLIBC_2.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <printf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 05 2f 00 00 	bnd jmpq *0x2f05(%rip)        # 3fc0 <printf@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <__isoc99_scanf@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 fd 2e 00 00 	bnd jmpq *0x2efd(%rip)        # 3fc8 <__isoc99_scanf@GLIBC_2.7>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <exit@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 f5 2e 00 00 	bnd jmpq *0x2ef5(%rip)        # 3fd0 <exit@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    %ebp,%ebp
    10e6:	49 89 d1             	mov    %rdx,%r9
    10e9:	5e                   	pop    %rsi
    10ea:	48 89 e2             	mov    %rsp,%rdx
    10ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10f1:	50                   	push   %rax
    10f2:	54                   	push   %rsp
    10f3:	4c 8d 05 d6 04 00 00 	lea    0x4d6(%rip),%r8        # 15d0 <__libc_csu_fini>
    10fa:	48 8d 0d 5f 04 00 00 	lea    0x45f(%rip),%rcx        # 1560 <__libc_csu_init>
    1101:	48 8d 3d 39 04 00 00 	lea    0x439(%rip),%rdi        # 1541 <main>
    1108:	ff 15 d2 2e 00 00    	callq  *0x2ed2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    110e:	f4                   	hlt    
    110f:	90                   	nop

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4060 <__TMC_END__>
    1117:	48 8d 05 42 2f 00 00 	lea    0x2f42(%rip),%rax        # 4060 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 ae 2e 00 00 	mov    0x2eae(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmpq   *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4060 <__TMC_END__>
    1147:	48 8d 35 12 2f 00 00 	lea    0x2f12(%rip),%rsi        # 4060 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    0x2e85(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmpq   *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d d5 2e 00 00 00 	cmpb   $0x0,0x2ed5(%rip)        # 4060 <__TMC_END__>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 62 2e 00 00 	cmpq   $0x0,0x2e62(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    0x2e66(%rip),%rdi        # 4008 <__dso_handle>
    11a2:	e8 d9 fe ff ff       	callq  1080 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	callq  1110 <deregister_tm_clones>
    11ac:	c6 05 ad 2e 00 00 01 	movb   $0x1,0x2ead(%rip)        # 4060 <__TMC_END__>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	retq   
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmpq   1140 <register_tm_clones>

00000000000011c9 <string_length>:
    11c9:	f3 0f 1e fa          	endbr64 
    11cd:	55                   	push   %rbp
    11ce:	48 89 e5             	mov    %rsp,%rbp
    11d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    11d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11dd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    11e4:	eb 09                	jmp    11ef <string_length+0x26>
    11e6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    11eb:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    11ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11f3:	0f b6 00             	movzbl (%rax),%eax
    11f6:	84 c0                	test   %al,%al
    11f8:	75 ec                	jne    11e6 <string_length+0x1d>
    11fa:	8b 45 f4             	mov    -0xc(%rbp),%eax
    11fd:	5d                   	pop    %rbp
    11fe:	c3                   	retq   

00000000000011ff <explode_bomb>:
    11ff:	f3 0f 1e fa          	endbr64 
    1203:	55                   	push   %rbp
    1204:	48 89 e5             	mov    %rsp,%rbp
    1207:	48 8d 3d fa 0d 00 00 	lea    0xdfa(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    120e:	e8 7d fe ff ff       	callq  1090 <puts@plt>
    1213:	48 8d 3d 33 0e 00 00 	lea    0xe33(%rip),%rdi        # 204d <_IO_stdin_used+0x4d>
    121a:	e8 71 fe ff ff       	callq  1090 <puts@plt>
    121f:	48 8d 3d 44 0e 00 00 	lea    0xe44(%rip),%rdi        # 206a <_IO_stdin_used+0x6a>
    1226:	e8 65 fe ff ff       	callq  1090 <puts@plt>
    122b:	48 8d 3d 55 0e 00 00 	lea    0xe55(%rip),%rdi        # 2087 <_IO_stdin_used+0x87>
    1232:	e8 59 fe ff ff       	callq  1090 <puts@plt>
    1237:	48 8d 3d 66 0e 00 00 	lea    0xe66(%rip),%rdi        # 20a4 <_IO_stdin_used+0xa4>
    123e:	e8 4d fe ff ff       	callq  1090 <puts@plt>
    1243:	48 8d 3d 77 0e 00 00 	lea    0xe77(%rip),%rdi        # 20c1 <_IO_stdin_used+0xc1>
    124a:	e8 41 fe ff ff       	callq  1090 <puts@plt>
    124f:	48 8d 3d 87 0e 00 00 	lea    0xe87(%rip),%rdi        # 20dd <_IO_stdin_used+0xdd>
    1256:	e8 35 fe ff ff       	callq  1090 <puts@plt>
    125b:	48 8d 3d 98 0e 00 00 	lea    0xe98(%rip),%rdi        # 20fa <_IO_stdin_used+0xfa>
    1262:	e8 29 fe ff ff       	callq  1090 <puts@plt>
    1267:	48 8d 3d a9 0e 00 00 	lea    0xea9(%rip),%rdi        # 2117 <_IO_stdin_used+0x117>
    126e:	e8 1d fe ff ff       	callq  1090 <puts@plt>
    1273:	48 8d 3d ba 0e 00 00 	lea    0xeba(%rip),%rdi        # 2134 <_IO_stdin_used+0x134>
    127a:	e8 11 fe ff ff       	callq  1090 <puts@plt>
    127f:	48 8d 3d cb 0e 00 00 	lea    0xecb(%rip),%rdi        # 2151 <_IO_stdin_used+0x151>
    1286:	e8 05 fe ff ff       	callq  1090 <puts@plt>
    128b:	48 8d 3d dc 0e 00 00 	lea    0xedc(%rip),%rdi        # 216e <_IO_stdin_used+0x16e>
    1292:	e8 f9 fd ff ff       	callq  1090 <puts@plt>
    1297:	48 8d 3d ed 0e 00 00 	lea    0xeed(%rip),%rdi        # 218b <_IO_stdin_used+0x18b>
    129e:	e8 ed fd ff ff       	callq  1090 <puts@plt>
    12a3:	48 8d 3d fe 0e 00 00 	lea    0xefe(%rip),%rdi        # 21a8 <_IO_stdin_used+0x1a8>
    12aa:	b8 00 00 00 00       	mov    $0x0,%eax
    12af:	e8 fc fd ff ff       	callq  10b0 <printf@plt>
    12b4:	bf 08 00 00 00       	mov    $0x8,%edi
    12b9:	e8 12 fe ff ff       	callq  10d0 <exit@plt>

00000000000012be <fun7>:
    12be:	f3 0f 1e fa          	endbr64 
    12c2:	55                   	push   %rbp
    12c3:	48 89 e5             	mov    %rsp,%rbp
    12c6:	48 83 ec 60          	sub    $0x60,%rsp
    12ca:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    12ce:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    12d1:	89 55 b0             	mov    %edx,-0x50(%rbp)
    12d4:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    12d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    12df:	00 00 
    12e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    12e5:	31 c0                	xor    %eax,%eax
    12e7:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    12ee:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    12f5:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
    12fc:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%rbp)
    1303:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    130a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)
    1311:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    1318:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    131f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    1322:	8d 50 07             	lea    0x7(%rax),%edx
    1325:	85 c0                	test   %eax,%eax
    1327:	0f 48 c2             	cmovs  %edx,%eax
    132a:	c1 f8 03             	sar    $0x3,%eax
    132d:	89 45 c8             	mov    %eax,-0x38(%rbp)
    1330:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    1333:	99                   	cltd   
    1334:	c1 ea 1d             	shr    $0x1d,%edx
    1337:	01 d0                	add    %edx,%eax
    1339:	83 e0 07             	and    $0x7,%eax
    133c:	29 d0                	sub    %edx,%eax
    133e:	89 45 cc             	mov    %eax,-0x34(%rbp)
    1341:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1344:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    1347:	75 2b                	jne    1374 <fun7+0xb6>
    1349:	83 7d c8 07          	cmpl   $0x7,-0x38(%rbp)
    134d:	75 25                	jne    1374 <fun7+0xb6>
    134f:	83 7d b0 04          	cmpl   $0x4,-0x50(%rbp)
    1353:	75 15                	jne    136a <fun7+0xac>
    1355:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1359:	0f b6 00             	movzbl (%rax),%eax
    135c:	84 c0                	test   %al,%al
    135e:	75 0a                	jne    136a <fun7+0xac>
    1360:	b8 01 00 00 00       	mov    $0x1,%eax
    1365:	e9 05 01 00 00       	jmpq   146f <fun7+0x1b1>
    136a:	b8 00 00 00 00       	mov    $0x0,%eax
    136f:	e9 fb 00 00 00       	jmpq   146f <fun7+0x1b1>
    1374:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1378:	0f b6 00             	movzbl (%rax),%eax
    137b:	0f be c0             	movsbl %al,%eax
    137e:	83 e0 03             	and    $0x3,%eax
    1381:	48 98                	cltq   
    1383:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    1387:	01 45 c8             	add    %eax,-0x38(%rbp)
    138a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    138e:	0f b6 00             	movzbl (%rax),%eax
    1391:	0f be c0             	movsbl %al,%eax
    1394:	83 e0 03             	and    $0x3,%eax
    1397:	48 98                	cltq   
    1399:	8b 44 85 e0          	mov    -0x20(%rbp,%rax,4),%eax
    139d:	01 45 cc             	add    %eax,-0x34(%rbp)
    13a0:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    13a4:	78 35                	js     13db <fun7+0x11d>
    13a6:	83 7d c8 07          	cmpl   $0x7,-0x38(%rbp)
    13aa:	7f 2f                	jg     13db <fun7+0x11d>
    13ac:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    13b0:	78 29                	js     13db <fun7+0x11d>
    13b2:	83 7d cc 07          	cmpl   $0x7,-0x34(%rbp)
    13b6:	7f 23                	jg     13db <fun7+0x11d>
    13b8:	8b 45 cc             	mov    -0x34(%rbp),%eax
    13bb:	48 98                	cltq   
    13bd:	8b 55 c8             	mov    -0x38(%rbp),%edx
    13c0:	48 63 d2             	movslq %edx,%rdx
    13c3:	48 c1 e2 03          	shl    $0x3,%rdx
    13c7:	48 01 c2             	add    %rax,%rdx
    13ca:	48 8d 05 4f 2c 00 00 	lea    0x2c4f(%rip),%rax        # 4020 <maze>
    13d1:	48 01 d0             	add    %rdx,%rax
    13d4:	0f b6 00             	movzbl (%rax),%eax
    13d7:	3c 01                	cmp    $0x1,%al
    13d9:	75 0a                	jne    13e5 <fun7+0x127>
    13db:	b8 00 00 00 00       	mov    $0x0,%eax
    13e0:	e9 8a 00 00 00       	jmpq   146f <fun7+0x1b1>
    13e5:	8b 45 cc             	mov    -0x34(%rbp),%eax
    13e8:	48 98                	cltq   
    13ea:	8b 55 c8             	mov    -0x38(%rbp),%edx
    13ed:	48 63 d2             	movslq %edx,%rdx
    13f0:	48 c1 e2 03          	shl    $0x3,%rdx
    13f4:	48 01 c2             	add    %rax,%rdx
    13f7:	48 8d 05 22 2c 00 00 	lea    0x2c22(%rip),%rax        # 4020 <maze>
    13fe:	48 01 d0             	add    %rdx,%rax
    1401:	0f b6 00             	movzbl (%rax),%eax
    1404:	84 c0                	test   %al,%al
    1406:	74 3c                	je     1444 <fun7+0x186>
    1408:	8b 45 cc             	mov    -0x34(%rbp),%eax
    140b:	48 98                	cltq   
    140d:	8b 55 c8             	mov    -0x38(%rbp),%edx
    1410:	48 63 d2             	movslq %edx,%rdx
    1413:	48 c1 e2 03          	shl    $0x3,%rdx
    1417:	48 01 c2             	add    %rax,%rdx
    141a:	48 8d 05 ff 2b 00 00 	lea    0x2bff(%rip),%rax        # 4020 <maze>
    1421:	48 01 d0             	add    %rdx,%rax
    1424:	0f b6 00             	movzbl (%rax),%eax
    1427:	0f be d0             	movsbl %al,%edx
    142a:	8b 45 b0             	mov    -0x50(%rbp),%eax
    142d:	48 98                	cltq   
    142f:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    1436:	00 
    1437:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    143b:	48 01 c8             	add    %rcx,%rax
    143e:	8b 00                	mov    (%rax),%eax
    1440:	39 c2                	cmp    %eax,%edx
    1442:	75 2b                	jne    146f <fun7+0x1b1>
    1444:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1448:	48 8d 48 01          	lea    0x1(%rax),%rcx
    144c:	8b 45 b0             	mov    -0x50(%rbp),%eax
    144f:	8d 50 01             	lea    0x1(%rax),%edx
    1452:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1455:	8d 34 c5 00 00 00 00 	lea    0x0(,%rax,8),%esi
    145c:	8b 45 cc             	mov    -0x34(%rbp),%eax
    145f:	01 c6                	add    %eax,%esi
    1461:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1465:	48 89 c7             	mov    %rax,%rdi
    1468:	e8 51 fe ff ff       	callq  12be <fun7>
    146d:	eb 00                	jmp    146f <fun7+0x1b1>
    146f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1473:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    147a:	00 00 
    147c:	74 05                	je     1483 <fun7+0x1c5>
    147e:	e8 1d fc ff ff       	callq  10a0 <__stack_chk_fail@plt>
    1483:	c9                   	leaveq 
    1484:	c3                   	retq   

0000000000001485 <secret_phase>:
    1485:	f3 0f 1e fa          	endbr64 
    1489:	55                   	push   %rbp
    148a:	48 89 e5             	mov    %rsp,%rbp
    148d:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    1494:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    149b:	00 00 
    149d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    14a1:	31 c0                	xor    %eax,%eax
    14a3:	c7 45 80 02 00 00 00 	movl   $0x2,-0x80(%rbp)
    14aa:	c7 45 84 03 00 00 00 	movl   $0x3,-0x7c(%rbp)
    14b1:	c7 45 88 05 00 00 00 	movl   $0x5,-0x78(%rbp)
    14b8:	c7 45 8c 04 00 00 00 	movl   $0x4,-0x74(%rbp)
    14bf:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    14c3:	48 89 c6             	mov    %rax,%rsi
    14c6:	48 8d 3d 1b 0d 00 00 	lea    0xd1b(%rip),%rdi        # 21e8 <_IO_stdin_used+0x1e8>
    14cd:	b8 00 00 00 00       	mov    $0x0,%eax
    14d2:	e8 e9 fb ff ff       	callq  10c0 <__isoc99_scanf@plt>
    14d7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    14db:	48 89 c7             	mov    %rax,%rdi
    14de:	e8 e6 fc ff ff       	callq  11c9 <string_length>
    14e3:	83 f8 46             	cmp    $0x46,%eax
    14e6:	7e 05                	jle    14ed <secret_phase+0x68>
    14e8:	e8 12 fd ff ff       	callq  11ff <explode_bomb>
    14ed:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    14f1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    14f5:	48 89 d1             	mov    %rdx,%rcx
    14f8:	ba 00 00 00 00       	mov    $0x0,%edx
    14fd:	be 00 00 00 00       	mov    $0x0,%esi
    1502:	48 89 c7             	mov    %rax,%rdi
    1505:	e8 b4 fd ff ff       	callq  12be <fun7>
    150a:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    1510:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    1517:	75 05                	jne    151e <secret_phase+0x99>
    1519:	e8 e1 fc ff ff       	callq  11ff <explode_bomb>
    151e:	48 8d 3d cb 0c 00 00 	lea    0xccb(%rip),%rdi        # 21f0 <_IO_stdin_used+0x1f0>
    1525:	e8 66 fb ff ff       	callq  1090 <puts@plt>
    152a:	90                   	nop
    152b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    152f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1536:	00 00 
    1538:	74 05                	je     153f <secret_phase+0xba>
    153a:	e8 61 fb ff ff       	callq  10a0 <__stack_chk_fail@plt>
    153f:	c9                   	leaveq 
    1540:	c3                   	retq   

0000000000001541 <main>:
    1541:	f3 0f 1e fa          	endbr64 
    1545:	55                   	push   %rbp
    1546:	48 89 e5             	mov    %rsp,%rbp
    1549:	b8 00 00 00 00       	mov    $0x0,%eax
    154e:	e8 32 ff ff ff       	callq  1485 <secret_phase>
    1553:	b8 00 00 00 00       	mov    $0x0,%eax
    1558:	5d                   	pop    %rbp
    1559:	c3                   	retq   
    155a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001560 <__libc_csu_init>:
    1560:	f3 0f 1e fa          	endbr64 
    1564:	41 57                	push   %r15
    1566:	4c 8d 3d 2b 28 00 00 	lea    0x282b(%rip),%r15        # 3d98 <__frame_dummy_init_array_entry>
    156d:	41 56                	push   %r14
    156f:	49 89 d6             	mov    %rdx,%r14
    1572:	41 55                	push   %r13
    1574:	49 89 f5             	mov    %rsi,%r13
    1577:	41 54                	push   %r12
    1579:	41 89 fc             	mov    %edi,%r12d
    157c:	55                   	push   %rbp
    157d:	48 8d 2d 1c 28 00 00 	lea    0x281c(%rip),%rbp        # 3da0 <__do_global_dtors_aux_fini_array_entry>
    1584:	53                   	push   %rbx
    1585:	4c 29 fd             	sub    %r15,%rbp
    1588:	48 83 ec 08          	sub    $0x8,%rsp
    158c:	e8 6f fa ff ff       	callq  1000 <_init>
    1591:	48 c1 fd 03          	sar    $0x3,%rbp
    1595:	74 1f                	je     15b6 <__libc_csu_init+0x56>
    1597:	31 db                	xor    %ebx,%ebx
    1599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    15a0:	4c 89 f2             	mov    %r14,%rdx
    15a3:	4c 89 ee             	mov    %r13,%rsi
    15a6:	44 89 e7             	mov    %r12d,%edi
    15a9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    15ad:	48 83 c3 01          	add    $0x1,%rbx
    15b1:	48 39 dd             	cmp    %rbx,%rbp
    15b4:	75 ea                	jne    15a0 <__libc_csu_init+0x40>
    15b6:	48 83 c4 08          	add    $0x8,%rsp
    15ba:	5b                   	pop    %rbx
    15bb:	5d                   	pop    %rbp
    15bc:	41 5c                	pop    %r12
    15be:	41 5d                	pop    %r13
    15c0:	41 5e                	pop    %r14
    15c2:	41 5f                	pop    %r15
    15c4:	c3                   	retq   
    15c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    15cc:	00 00 00 00 

00000000000015d0 <__libc_csu_fini>:
    15d0:	f3 0f 1e fa          	endbr64 
    15d4:	c3                   	retq   

Disassembly of section .fini:

00000000000015d8 <_fini>:
    15d8:	f3 0f 1e fa          	endbr64 
    15dc:	48 83 ec 08          	sub    $0x8,%rsp
    15e0:	48 83 c4 08          	add    $0x8,%rsp
    15e4:	c3                   	retq   
